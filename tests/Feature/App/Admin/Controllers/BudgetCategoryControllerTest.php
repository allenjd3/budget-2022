<?php

namespace Tests\Feature\App\Admin\Controllers;

use Authentication\Models\User;
use Budget\Models\BudgetCategory;
use Budget\Models\BudgetMonth;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\TestCase;

class BudgetCategoryControllerTest extends TestCase
{
    use RefreshDatabase;

    public BudgetMonth $budget;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->budget = BudgetMonth::factory()->create();
    }

    /** @test * */
    public function unauthenticated_users_are_redirected_to_login()
    {
        $this->get(route('budget-category.create', $this->budget))->assertRedirect(route('login'));
    }

    /** @test * */
    public function a_user_can_create_a_category()
    {
        $this->actingAs($this->budget->user)
            ->post(route('budget-category.store', $this->budget), ['name' => 'My Amazing Category'])
            ->assertRedirect();

        $this->assertDatabaseHas('budget_categories', [
            'name' => 'My Amazing Category',
        ]);
    }

    /** @test * */
    public function a_user_can_update_their_own_category()
    {
        $category = $this->budget->categories()->create(['name' => 'Bla bla category']);
        $this->actingAs($this->budget->user)
            ->patch(route('budget-category.update', $category), ['name' => 'My Second Amazing Category'])
            ->assertRedirect();

        $this->assertDatabaseHas('budget_categories', [
            'name' => 'My Second Amazing Category',
        ]);
    }

    /** @test * */
    public function a_user_can_not_update_another_users_category()
    {
        $category = $this->budget->categories()->create(['name' => 'Bla bla category']);
        $this->actingAs(User::factory()->create())
            ->patch(route('budget-category.update', $category), ['name' => 'My Second Amazing Category'])
            ->assertForbidden();

        $this->assertDatabaseHas('budget_categories', [
            'name' => 'Bla bla category',
        ]);
    }

    /** @test */
    public function a_user_can_delete_a_category()
    {
        $budget = BudgetCategory::factory()->for($this->budget, 'month')->create();
        $this->actingAs($this->budget->user)
            ->delete(route('budget-category.delete', $budget))
            ->assertRedirect();

        $this->assertDatabaseMissing('budget_categories', [
            'name' => $budget->name,
        ]);
    }

    /** @test * */
    public function a_user_cannot_delete_another_users_category()
    {
        $budget = BudgetCategory::factory()->for($this->budget, 'month')->create();
        $this->actingAs(User::factory()->create())
            ->delete(route('budget-category.delete', $budget))
            ->assertForbidden();

        $this->assertDatabaseHas('budget_categories', [
            'name' => $budget->name,
        ]);
    }
}
